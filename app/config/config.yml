imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@RTechUserBundle/Resources/config/services.yml" }
    - { resource: fos_elastica.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

#Switcher language
jms_i18n_routing:
    default_locale: "%locale%"
    locales: [fr, en, es]
    strategy: prefix_except_default

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }



# FOS User Bundle
fos_user:
    db_driver: orm   # Le type de BDD à utiliser , nous utilisons l'ORM Doctrine
    firewall_name: main   # Le nom de firewall derriere lequel on utilisera ces utilisateurs
    # Permet de renseigner la nouvelle entity utilisateur
    user_class: RTech\UserBundle\Entity\User     # La classe de l'entité User que nous utilisons
    service:
            mailer: fos_user.mailer.twig_swift

    registration:
        form:
            type: RTech\UserBundle\Form\Type\RegistrationFormType
    profile:
        form:
            type: RTech\UserBundle\Form\Type\ProfileFormType


# Stof\DoctrineExtensionsBundle configuration
stof_doctrine_extensions:
    orm:
        default:
            sluggable: true


easy_admin:
    site_name: '<img src="/radioTech/web/bundles/public/images/logo.png" alt="RadioTech">'
    design:
        brand_color: 'rgba(17, 17, 19, 1)'
        assets:
            favicon:
                path: '/assets/backend/favicon.ico'
                mime_type: 'image/ico'
    list:
        actions: ['show']
    entities:
        Category:
            class: RTech\AppBundle\Entity\Category
            list:
                fields: ['id', 'categoryName', 'medias', 'slug']
            edit:
                fields: ['categoryName', 'medias', 'slug']
            new:
                fields: ['categoryName', 'medias', 'slug']


        Media:
            class: RTech\AppBundle\Entity\Media
            disabled_actions: ['delete']

        User:
            class: RTech\UserBundle\Entity\User
            list:
                fields: ['id', 'lastname', 'firstname', 'birthday']
            edit:
                fields: ['id', 'lastname', 'firstname', 'birthday','username','email','password']
                roles: [ROLE_AMIN]
            new:
                fields: ['id', 'lastname', 'firstname', 'birthday','username','email','password']
